[
  {
    "id": "trend-001",
    "title": "Claude API로 AI 어시스턴트 구축",
    "prompt": "Anthropic Claude API를 사용해 대화형 AI 어시스턴트를 구축하고, 스트리밍 응답, 컨텍스트 관리, 프롬프트 엔지니어링을 구현해줘.",
    "category": "AI/LLM",
    "tool": "Claude API",
    "framework": "Python",
    "level": "중급",
    "keywords": [
      "Claude",
      "AI 어시스턴트",
      "스트리밍",
      "프롬프트",
      "API"
    ]
  },
  {
    "id": "trend-002",
    "title": "Supabase로 풀스택 앱 개발",
    "prompt": "Supabase를 백엔드로 사용해 풀스택 앱을 개발하고, 실시간 데이터베이스, 인증, 스토리지, Edge Functions를 활용해줘.",
    "category": "풀스택",
    "tool": "Supabase",
    "framework": "Next.js",
    "level": "중급",
    "keywords": [
      "Supabase",
      "실시간",
      "인증",
      "Edge Functions",
      "풀스택"
    ]
  },
  {
    "id": "trend-003",
    "title": "Vercel AI SDK로 챗봇 만들기",
    "prompt": "Vercel AI SDK를 사용해 스트리밍 챗봇을 만들고, 여러 LLM 프로바이더 지원, 함수 호출, UI 컴포넌트를 구현해줘.",
    "category": "AI/LLM",
    "tool": "Vercel AI",
    "framework": "Next.js",
    "level": "중급",
    "keywords": [
      "Vercel AI",
      "챗봇",
      "스트리밍",
      "함수 호출",
      "LLM"
    ]
  },
  {
    "id": "trend-004",
    "title": "Bun으로 고성능 서버 구축",
    "prompt": "Bun 런타임을 사용해 고성능 HTTP 서버를 구축하고, WebSocket, 파일 처리, 타입스크립트 지원을 구현해줘.",
    "category": "백엔드",
    "tool": "Bun",
    "framework": "Bun",
    "level": "중급",
    "keywords": [
      "Bun",
      "고성능",
      "WebSocket",
      "타입스크립트",
      "런타임"
    ]
  },
  {
    "id": "trend-005",
    "title": "Astro로 콘텐츠 사이트 구축",
    "prompt": "Astro를 사용해 고성능 콘텐츠 사이트를 구축하고, Island Architecture, MDX 지원, 다중 프레임워크 통합을 구현해줘.",
    "category": "프론트엔드",
    "tool": "Astro",
    "framework": "Astro",
    "level": "중급",
    "keywords": [
      "Astro",
      "Island Architecture",
      "MDX",
      "정적 사이트",
      "성능"
    ]
  },
  {
    "id": "trend-006",
    "title": "Tailwind CSS v4로 디자인 시스템",
    "prompt": "Tailwind CSS v4를 사용해 디자인 시스템을 구축하고, CSS-in-JS 마이그레이션, 다크모드, 컴포넌트 라이브러리를 만들어줘.",
    "category": "프론트엔드",
    "tool": "Tailwind CSS",
    "framework": "React",
    "level": "중급",
    "keywords": [
      "Tailwind v4",
      "디자인 시스템",
      "CSS-in-JS",
      "다크모드",
      "컴포넌트"
    ]
  },
  {
    "id": "trend-007",
    "title": "Remix로 풀스택 앱 개발",
    "prompt": "Remix를 사용해 풀스택 웹 앱을 개발하고, 서버 컴포넌트, 데이터 로딩, 에러 바운더리, 프로그레시브 인핸스먼트를 구현해줘.",
    "category": "풀스택",
    "tool": "Remix",
    "framework": "Remix",
    "level": "중급",
    "keywords": [
      "Remix",
      "서버 컴포넌트",
      "데이터 로딩",
      "풀스택",
      "프로그레시브"
    ]
  },
  {
    "id": "trend-008",
    "title": "Deno 2로 모던 백엔드 API",
    "prompt": "Deno 2를 사용해 타입세이프 백엔드 API를 구축하고, KV 스토어, Deno Deploy, 네이티브 HTTP 서버를 활용해줘.",
    "category": "백엔드",
    "tool": "Deno",
    "framework": "Deno",
    "level": "중급",
    "keywords": [
      "Deno 2",
      "KV 스토어",
      "Deno Deploy",
      "타입세이프",
      "백엔드"
    ]
  },
  {
    "id": "trend-009",
    "title": "Qwik으로 즉시 로딩 앱",
    "prompt": "Qwik 프레임워크를 사용해 즉시 로딩되는 웹 앱을 만들고, Resumability, 지연 로딩, 최적화된 번들링을 구현해줘.",
    "category": "프론트엔드",
    "tool": "Qwik",
    "framework": "Qwik",
    "level": "고급",
    "keywords": [
      "Qwik",
      "Resumability",
      "즉시 로딩",
      "지연 로딩",
      "최적화"
    ]
  },
  {
    "id": "trend-010",
    "title": "Turso로 엣지 데이터베이스",
    "prompt": "Turso (libSQL)를 사용해 엣지 데이터베이스를 구축하고, 멀티 리전 복제, 임베디드 레플리카, 서버리스 통합을 구현해줘.",
    "category": "데이터베이스",
    "tool": "Turso",
    "framework": "없음",
    "level": "고급",
    "keywords": [
      "Turso",
      "엣지 데이터베이스",
      "libSQL",
      "멀티 리전",
      "서버리스"
    ]
  },
  {
    "id": "trend-011",
    "title": "Rust WASM으로 웹 앱 최적화",
    "prompt": "Rust와 WebAssembly를 사용해 웹 앱의 핵심 로직을 최적화하고, JavaScript 인터페이스, 메모리 관리, 성능 측정을 구현해줘.",
    "category": "웹어셈블리",
    "tool": "Rust",
    "framework": "wasm-bindgen",
    "level": "고급",
    "keywords": [
      "Rust",
      "WebAssembly",
      "WASM",
      "성능 최적화",
      "메모리 관리"
    ]
  },
  {
    "id": "trend-012",
    "title": "htmx로 하이퍼미디어 앱",
    "prompt": "htmx를 사용해 서버 주도 하이퍼미디어 앱을 만들고, AJAX 요청, 부분 업데이트, 프로그레시브 인핸스먼트를 구현해줘.",
    "category": "프론트엔드",
    "tool": "htmx",
    "framework": "htmx",
    "level": "중급",
    "keywords": [
      "htmx",
      "하이퍼미디어",
      "AJAX",
      "서버 주도",
      "부분 업데이트"
    ]
  },
  {
    "id": "trend-013",
    "title": "Cursor AI로 코드 생성 도구",
    "prompt": "Cursor AI API를 활용해 코드 생성 도구를 만들고, 프롬프트 최적화, 코드 리뷰, 자동 리팩토링 기능을 구현해줘.",
    "category": "AI/LLM",
    "tool": "Cursor",
    "framework": "없음",
    "level": "고급",
    "keywords": [
      "Cursor AI",
      "코드 생성",
      "프롬프트",
      "리팩토링",
      "AI 도구"
    ]
  },
  {
    "id": "trend-014",
    "title": "Hono로 엣지 워커 API",
    "prompt": "Hono 프레임워크를 사용해 Cloudflare Workers에서 실행되는 API를 만들고, 미들웨어, 라우팅, 타입 안정성을 구현해줘.",
    "category": "백엔드",
    "tool": "Hono",
    "framework": "Hono",
    "level": "중급",
    "keywords": [
      "Hono",
      "Cloudflare Workers",
      "엣지",
      "미들웨어",
      "타입 안정성"
    ]
  },
  {
    "id": "trend-015",
    "title": "Solid.js로 반응형 UI",
    "prompt": "Solid.js를 사용해 세밀한 반응성을 가진 UI를 구축하고, 시그널, 리소스, 서스펜스, 최적화된 렌더링을 구현해줘.",
    "category": "프론트엔드",
    "tool": "Solid.js",
    "framework": "Solid.js",
    "level": "중급",
    "keywords": [
      "Solid.js",
      "시그널",
      "반응성",
      "세밀한 업데이트",
      "성능"
    ]
  },
  {
    "id": "trend-016",
    "title": "Vite 5로 빌드 최적화",
    "prompt": "Vite 5를 사용해 프론트엔드 빌드를 최적화하고, 플러그인 개발, SSR 지원, 라이브러리 모드, 성능 프로파일링을 구현해줘.",
    "category": "빌드도구",
    "tool": "Vite",
    "framework": "Vite",
    "level": "중급",
    "keywords": [
      "Vite 5",
      "빌드 최적화",
      "플러그인",
      "SSR",
      "성능"
    ]
  },
  {
    "id": "trend-017",
    "title": "Drizzle ORM으로 타입세이프 DB",
    "prompt": "Drizzle ORM을 사용해 타입세이프 데이터베이스 레이어를 구축하고, 마이그레이션, 관계 정의, 쿼리 빌더를 구현해줘.",
    "category": "데이터베이스",
    "tool": "Drizzle",
    "framework": "Drizzle ORM",
    "level": "중급",
    "keywords": [
      "Drizzle ORM",
      "타입세이프",
      "마이그레이션",
      "쿼리 빌더",
      "ORM"
    ]
  },
  {
    "id": "trend-018",
    "title": "tRPC로 타입세이프 API",
    "prompt": "tRPC를 사용해 엔드투엔드 타입세이프 API를 구축하고, 실시간 구독, 미들웨어, 에러 처리, 배치 요청을 구현해줘.",
    "category": "풀스택",
    "tool": "tRPC",
    "framework": "tRPC",
    "level": "중급",
    "keywords": [
      "tRPC",
      "타입세이프",
      "실시간",
      "미들웨어",
      "배치"
    ]
  },
  {
    "id": "trend-019",
    "title": "Tauri 2로 데스크톱 앱",
    "prompt": "Tauri 2를 사용해 크로스 플랫폼 데스크톱 앱을 만들고, 시스템 트레이, 파일 시스템 접근, 자동 업데이트를 구현해줘.",
    "category": "데스크톱",
    "tool": "Tauri",
    "framework": "Tauri",
    "level": "고급",
    "keywords": [
      "Tauri 2",
      "데스크톱",
      "크로스 플랫폼",
      "시스템 트레이",
      "자동 업데이트"
    ]
  },
  {
    "id": "trend-020",
    "title": "Nuxt 3로 유니버설 앱",
    "prompt": "Nuxt 3를 사용해 유니버설 Vue 앱을 개발하고, Nitro 서버, 자동 임포트, 하이브리드 렌더링, 모듈 시스템을 활용해줘.",
    "category": "프론트엔드",
    "tool": "Nuxt",
    "framework": "Nuxt 3",
    "level": "중급",
    "keywords": [
      "Nuxt 3",
      "유니버설",
      "Nitro",
      "하이브리드 렌더링",
      "Vue"
    ]
  },
  {
    "id": "trend-021",
    "title": "Zig으로 시스템 프로그래밍",
    "prompt": "Zig 언어를 사용해 메모리 안전한 시스템 프로그램을 작성하고, 컴파일 타임 실행, 에러 처리, C 인터롭을 구현해줘.",
    "category": "시스템프로그래밍",
    "tool": "Zig",
    "framework": "없음",
    "level": "고급",
    "keywords": [
      "Zig",
      "시스템 프로그래밍",
      "메모리 안전",
      "컴파일 타임",
      "C 인터롭"
    ]
  },
  {
    "id": "trend-022",
    "title": "Million.js로 React 최적화",
    "prompt": "Million.js를 사용해 React 앱의 성능을 극대화하고, 가상 DOM 최적화, 자동 메모이제이션, 번들 크기 감소를 구현해줘.",
    "category": "프론트엔드",
    "tool": "Million.js",
    "framework": "React",
    "level": "중급",
    "keywords": [
      "Million.js",
      "React 최적화",
      "가상 DOM",
      "메모이제이션",
      "성능"
    ]
  },
  {
    "id": "trend-023",
    "title": "Expo 50으로 React Native 앱",
    "prompt": "Expo SDK 50을 사용해 React Native 앱을 개발하고, EAS Build, 로컬 모듈, 네이티브 확장, OTA 업데이트를 구현해줘.",
    "category": "모바일",
    "tool": "Expo",
    "framework": "React Native",
    "level": "중급",
    "keywords": [
      "Expo 50",
      "React Native",
      "EAS Build",
      "OTA",
      "네이티브"
    ]
  },
  {
    "id": "trend-024",
    "title": "Mojo로 AI 모델 최적화",
    "prompt": "Mojo 언어를 사용해 Python AI 모델을 최적화하고, SIMD 연산, 병렬 처리, 메모리 효율성, GPU 가속을 구현해줘.",
    "category": "AI/ML",
    "tool": "Mojo",
    "framework": "Mojo",
    "level": "고급",
    "keywords": [
      "Mojo",
      "AI 최적화",
      "SIMD",
      "병렬 처리",
      "GPU"
    ]
  },
  {
    "id": "trend-025",
    "title": "Biome으로 코드 품질 관리",
    "prompt": "Biome (구 Rome)을 사용해 JavaScript/TypeScript 프로젝트의 포맷팅, 린팅, 번들링을 통합 관리하고, CI/CD에 통합해줘.",
    "category": "개발도구",
    "tool": "Biome",
    "framework": "없음",
    "level": "중급",
    "keywords": [
      "Biome",
      "린팅",
      "포맷팅",
      "코드 품질",
      "CI/CD"
    ]
  }
]