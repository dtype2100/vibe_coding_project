[
  {
    "id": "6538bf7c-4442-43e5-b98d-2beaaa06dfcc",
    "title": "반응형 로그인 폼 생성",
    "prompt": "React와 TailwindCSS를 사용해 사용자 이메일과 비밀번호를 입력받는 반응형 로그인 폼을 구현하고, 모바일에서도 적절히 동작하도록 해줘.",
    "category": "프론트엔드",
    "tool": "React",
    "framework": "Next.js",
    "level": "입문",
    "keywords": [
      "로그인",
      "폼",
      "반응형",
      "Tailwind",
      "UI"
    ]
  },
  {
    "id": "5012e923-45b7-4c97-8725-c47e68db88f6",
    "title": "FastAPI로 JWT 로그인 API 만들기",
    "prompt": "FastAPI로 이메일과 비밀번호를 받아 JWT 토큰을 반환하는 로그인 API를 구현하고, Pydantic 모델과 에러 핸들링도 포함해줘.",
    "category": "백엔드",
    "tool": "FastAPI",
    "framework": "FastAPI",
    "level": "중급",
    "keywords": [
      "JWT",
      "인증",
      "로그인",
      "백엔드",
      "보안"
    ]
  },
  {
    "id": "da5cd9cd-e600-49d7-a3ee-322049f21d16",
    "title": "PDF 요약 챗봇",
    "prompt": "LangChain과 FAISS를 사용해 사용자가 업로드한 PDF 파일의 내용을 요약할 수 있는 챗봇을 만들고, Streamlit 기반 UI까지 포함해줘.",
    "category": "AI/LLM",
    "tool": "LangChain",
    "framework": "LangChain",
    "level": "중급",
    "keywords": [
      "요약",
      "챗봇",
      "PDF",
      "RAG",
      "FAISS"
    ]
  },
  {
    "id": "e10f67a8-3611-4897-b19f-dd1ea353ae50",
    "title": "FastAPI Dockerfile 생성",
    "prompt": "FastAPI 애플리케이션을 배포하기 위한 Dockerfile을 생성하고, poetry 환경과 Uvicorn 실행 커맨드를 포함해줘.",
    "category": "DevOps",
    "tool": "Docker",
    "framework": "FastAPI",
    "level": "중급",
    "keywords": [
      "Dockerfile",
      "FastAPI",
      "배포",
      "poetry"
    ]
  },
  {
    "id": "62d774d2-5c03-4378-aeea-2833bcda5b8d",
    "title": "Streamlit로 CSV 시각화 앱 만들기",
    "prompt": "사용자가 업로드한 CSV 파일을 pandas로 로드한 후, Plotly로 시각화해주는 Streamlit 앱 코드를 작성해줘.",
    "category": "데이터분석",
    "tool": "Streamlit",
    "framework": "Streamlit",
    "level": "중급",
    "keywords": [
      "CSV",
      "시각화",
      "Streamlit",
      "Plotly"
    ]
  },
  {
    "id": "45dfbee9-f200-4728-ba14-a59cb4821ee3",
    "title": "llama-cpp 로컬 모델 실행",
    "prompt": "llama-cpp-python으로 GGUF 형식의 LLaMA 모델을 CPU에서 실행하고, 사용자 입력을 받아 응답하는 CLI 챗봇 코드를 작성해줘.",
    "category": "AI/LLM",
    "tool": "llama-cpp",
    "framework": "llama-cpp-python",
    "level": "고급",
    "keywords": [
      "llama",
      "로컬 모델",
      "GGUF",
      "CPU",
      "서빙"
    ]
  },
  {
    "id": "1ac396f6-1d52-4808-9d0d-d423cfa0dc33",
    "title": "React용 GitHub Actions CI",
    "prompt": "React 프로젝트에서 커밋 또는 PR 시 자동 빌드와 테스트를 실행하는 GitHub Actions 워크플로우 yml 파일을 만들어줘.",
    "category": "DevOps",
    "tool": "GitHub Actions",
    "framework": "React",
    "level": "중급",
    "keywords": [
      "CI",
      "React",
      "배포",
      "자동화"
    ]
  },
  {
    "id": "eaccb6fd-96d0-40e4-91a8-63972df8d376",
    "title": "프롬프트 결과 비교",
    "prompt": "‘우리 제품은 저렴하고 빠릅니다’라는 문장을 직설적, 설득형, 감성형 스타일로 각각 다시 표현해줘.",
    "category": "AI/LLM",
    "tool": "ChatGPT",
    "framework": "OpenAI",
    "level": "중급",
    "keywords": [
      "프롬프트 엔지니어링",
      "비교",
      "스타일",
      "LLM"
    ]
  },
  {
    "id": "b4a72513-e07d-4c38-900e-64afb7cbf2e4",
    "title": "React Zod 폼 유효성 검사",
    "prompt": "React Hook Form과 Zod를 사용해 사용자 이름과 이메일을 입력받는 폼을 만들고, 유효성 검사 로직을 포함해줘.",
    "category": "프론트엔드",
    "tool": "React",
    "framework": "React",
    "level": "중급",
    "keywords": [
      "유효성 검사",
      "Zod",
      "React Hook Form",
      "폼"
    ]
  },
  {
    "id": "4fc314e3-5356-4b08-a33d-5bf64c3f996c",
    "title": "짝수/홀수 판별기",
    "prompt": "Python으로 사용자로부터 숫자를 입력받고 해당 숫자가 짝수인지 홀수인지 판별하는 콘솔 프로그램을 작성해줘.",
    "category": "기초",
    "tool": "Python",
    "framework": "없음",
    "level": "입문",
    "keywords": [
      "짝수",
      "홀수",
      "입문자",
      "제어문"
    ]
  }
]